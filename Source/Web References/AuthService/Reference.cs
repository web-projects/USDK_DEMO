//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace USDKDemo.AuthService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceSoap", Namespace="http://idtechproducts.com/")]
    public partial class WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private SecuredWebServiceHeader securedWebServiceHeaderValueField;
        
        private System.Threading.SendOrPostCallback SecurityResetOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestSecurityPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductModelOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService() {
            this.Url = global::USDKDemo.Properties.Settings.Default.UniversalSDKDemo_AuthService_WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public SecuredWebServiceHeader SecuredWebServiceHeaderValue {
            get {
                return this.securedWebServiceHeaderValueField;
            }
            set {
                this.securedWebServiceHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SecurityResetCompletedEventHandler SecurityResetCompleted;
        
        /// <remarks/>
        public event AuthenticateUserCompletedEventHandler AuthenticateUserCompleted;
        
        /// <remarks/>
        public event TestSecurityPasswordCompletedEventHandler TestSecurityPasswordCompleted;
        
        /// <remarks/>
        public event GetProductModelCompletedEventHandler GetProductModelCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://idtechproducts.com/SecurityReset", RequestNamespace="http://idtechproducts.com/", ResponseNamespace="http://idtechproducts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SecurityReset() {
            object[] results = this.Invoke("SecurityReset", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SecurityResetAsync() {
            this.SecurityResetAsync(null);
        }
        
        /// <remarks/>
        public void SecurityResetAsync(object userState) {
            if ((this.SecurityResetOperationCompleted == null)) {
                this.SecurityResetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSecurityResetOperationCompleted);
            }
            this.InvokeAsync("SecurityReset", new object[0], this.SecurityResetOperationCompleted, userState);
        }
        
        private void OnSecurityResetOperationCompleted(object arg) {
            if ((this.SecurityResetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SecurityResetCompleted(this, new SecurityResetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://idtechproducts.com/AuthenticateUser", RequestNamespace="http://idtechproducts.com/", ResponseNamespace="http://idtechproducts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuthenticateUser() {
            object[] results = this.Invoke("AuthenticateUser", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync() {
            this.AuthenticateUserAsync(null);
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync(object userState) {
            if ((this.AuthenticateUserOperationCompleted == null)) {
                this.AuthenticateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateUserOperationCompleted);
            }
            this.InvokeAsync("AuthenticateUser", new object[0], this.AuthenticateUserOperationCompleted, userState);
        }
        
        private void OnAuthenticateUserOperationCompleted(object arg) {
            if ((this.AuthenticateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateUserCompleted(this, new AuthenticateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://idtechproducts.com/TestSecurityPassword", RequestNamespace="http://idtechproducts.com/", ResponseNamespace="http://idtechproducts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestSecurityPassword() {
            object[] results = this.Invoke("TestSecurityPassword", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestSecurityPasswordAsync() {
            this.TestSecurityPasswordAsync(null);
        }
        
        /// <remarks/>
        public void TestSecurityPasswordAsync(object userState) {
            if ((this.TestSecurityPasswordOperationCompleted == null)) {
                this.TestSecurityPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestSecurityPasswordOperationCompleted);
            }
            this.InvokeAsync("TestSecurityPassword", new object[0], this.TestSecurityPasswordOperationCompleted, userState);
        }
        
        private void OnTestSecurityPasswordOperationCompleted(object arg) {
            if ((this.TestSecurityPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestSecurityPasswordCompleted(this, new TestSecurityPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://idtechproducts.com/GetProductModel", RequestNamespace="http://idtechproducts.com/", ResponseNamespace="http://idtechproducts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProductModel() {
            object[] results = this.Invoke("GetProductModel", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductModelAsync() {
            this.GetProductModelAsync(null);
        }
        
        /// <remarks/>
        public void GetProductModelAsync(object userState) {
            if ((this.GetProductModelOperationCompleted == null)) {
                this.GetProductModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductModelOperationCompleted);
            }
            this.InvokeAsync("GetProductModel", new object[0], this.GetProductModelOperationCompleted, userState);
        }
        
        private void OnGetProductModelOperationCompleted(object arg) {
            if ((this.GetProductModelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductModelCompleted(this, new GetProductModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://idtechproducts.com/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://idtechproducts.com/", IsNullable=false)]
    public partial class SecuredWebServiceHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string userTokenField;
        
        private string passwordField;
        
        private string deviceSerialNumberField;
        
        private string certSerialNumberField;
        
        private string productNameField;
        
        private string modelNumberField;
        
        private string authenticatedTokenField;
        
        private string adminSecurityField;
        
        private string supervisorSecurityField;
        
        private string operatorSecurityField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserToken {
            get {
                return this.userTokenField;
            }
            set {
                this.userTokenField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string DeviceSerialNumber {
            get {
                return this.deviceSerialNumberField;
            }
            set {
                this.deviceSerialNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CertSerialNumber {
            get {
                return this.certSerialNumberField;
            }
            set {
                this.certSerialNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public string ModelNumber {
            get {
                return this.modelNumberField;
            }
            set {
                this.modelNumberField = value;
            }
        }
        
        /// <remarks/>
        public string AuthenticatedToken {
            get {
                return this.authenticatedTokenField;
            }
            set {
                this.authenticatedTokenField = value;
            }
        }
        
        /// <remarks/>
        public string AdminSecurity {
            get {
                return this.adminSecurityField;
            }
            set {
                this.adminSecurityField = value;
            }
        }
        
        /// <remarks/>
        public string SupervisorSecurity {
            get {
                return this.supervisorSecurityField;
            }
            set {
                this.supervisorSecurityField = value;
            }
        }
        
        /// <remarks/>
        public string OperatorSecurity {
            get {
                return this.operatorSecurityField;
            }
            set {
                this.operatorSecurityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SecurityResetCompletedEventHandler(object sender, SecurityResetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SecurityResetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SecurityResetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AuthenticateUserCompletedEventHandler(object sender, AuthenticateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TestSecurityPasswordCompletedEventHandler(object sender, TestSecurityPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestSecurityPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestSecurityPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetProductModelCompletedEventHandler(object sender, GetProductModelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591